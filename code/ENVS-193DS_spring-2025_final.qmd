---
title: "ENVS-193DS_spring-2025_final"
author: Matthew Roco-Calvo
date: 06/11/2025
format:
  html:
    toc: true # use this to display a table of contents
execute:
  message: false # use this to make sure messages don't show up
  warning: false # use this to make sure warnings don't show up
---

## Packages and Data

```{r}

library(tidyverse) 
library(janitor)
library(here)
library(gt)
library(flextable)
library(readxl)

sst <- read.csv(here("data", "SST_update2023.csv")) # creating a dataframe "sst" for question 2 using SBC LTER dataset on sea surface temperatures.

```


## Question 1:Research writing

### A: Transparent statistical methods

In part 1 of their results section, they made use of a Pearson’s r test, while in part 2 they used a one way Analysis of Variance (ANOVA).

### B: More information needed

For part 2 of their results, the authors could run a Tukey’s Honestly Significant Difference test (Tukey’s HSD), as their ANOVA only reveals that there is a significant difference between average nitrogen loads (kg/year) in at at least two of the groups, which could be any pairing. A Tukey’s HSD test would reveal which groups’ average nitrogen are significantly different, providing more context in terms of what sources influence nitrogen runoff/pollution the most. Additionally, they could calculate the Eta squared, which is the effect size for an ANOVA. This would help to provide more context, as it would allow readers to understand how strong the effect of source is on average nitrogen loads.

### C: Suggestions for rewriting

We found that there is a correlation between distance from headwater (km) and annual total nitrogen load (kg/year), (Pearson’s r test, r = value of correlation, R^2 = coefficient of determination, p = 0.03)

Additionally, we determined that there is a large difference ( n = Eta squared) between nitrogen pollution sources (urban land, atmospheric deposition, fertilizer, wastewater treatment, and grasslands) in average nitrogen load in kg/year (one-way ANOVA, f(degrees of freedom within groups, degrees of freedom between groups) = f-statistic,  p = 0.02, alpha = significance level).

## Question 2: Data visualization

### A: Cleaning and summarizing

```{r}

sst_clean <- sst |> #creating a new dataframe sst_clean from sst dataframe read above.
  mutate(year = year(date)) |>  #creating a new column "year" with only the year from the existing date column
  mutate(month = month(date)) |>  #creating a new column "month" with only the year from the existing date column
  select(temp, year, month) |> #selecting to only include year, month, and temperature column
  mutate(month = as_factor(month)) |>  #making the months a factor
  mutate(year = as_factor(year)) |>   #making the year a factor 
  group_by(month, year) |> 
  summarize(
    mean_monthly_sst = mean(temp, na.rm = TRUE) #creating a new column to summarize the mean monthly SST
  ) |> 
  ungroup() |>  #ungrouping data
  filter(year %in% c(2018, #filtering to only include years 2018-2019
                     2019,
                     2020,
                     2021,
                     2022,
                     2023 ))
    
```

### B: Visualize the data

```{r}

ggplot(data = sst_clean, #starting with the sst_clean dataframe created in problem 2a
       aes(x = month, #x axis in month
           y = mean_monthly_sst, #y axis in mean monthly sea surface temperature
           color = year, #coloring and grouping by year
           group = year)) +
  geom_line() + #adding the first layer which is a line chart
  geom_point() +#adding the second layer which is a scatter plot
  scale_x_discrete( #relabelling the Months from numbers to text
    label = c( 
      "1" = "Jan",
      "2" = "Feb",
      "3" = "Mar",
      "4" = "Apr",
      "5" = "May",
      "6" = "Jun",
      "7" = "Jul",
      "8" = "Aug",
      "9" = "Sep",
      "10" = "Oct",
      "11" = "Nov",
      "12" = "Dec"
    )
  ) +
  
  
  labs( x = "Month", #labeling the x axis "Month"
        y = "Mean Monthly Sea Surface Temperature (C)", #labeling the y axis as mean monthly sea surface temp
        color = "Year" #labeling the axis as year
        ) +
  scale_color_manual(values = #adding a gradient of color manually. scale_color_gradient did not work with discrete data
                       c(
                         "2018" = "lightblue",
                         "2019" = "steelblue1",
                         "2019" = "steelblue2",
                         "2020" = "steelblue3",
                         "2021" = "steelblue",
                         "2022" = "steelblue4",
                        "2023" = "darkblue"
                       )) +
  theme(
    panel.grid = element_blank(), #removing gridlines 
    panel.background = element_blank(),#making background white
    panel.border = element_rect(color = "black", fill = NA, linewidth = 1), #adding a pannel border
    legend.position = c(0.10, 0.75) #moving legend to inside top left.
  )



```





